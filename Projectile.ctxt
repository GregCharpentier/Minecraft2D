#BlueJ class context
comment0.params=
comment0.target=Projectile()
comment1.params=
comment1.target=int\ lifeTime()
comment10.params=
comment10.target=greenfoot.Actor\ getHorizontalCollide()
comment10.text=\r\n\ Returns\ mob\ or\ block\ that\ the\ projectile\ will\ collide\ with\ horizontally.\r\n
comment11.params=
comment11.target=float\ getProjectileDamage()
comment12.params=
comment12.target=greenfoot.Actor\ getVerticalCollide()
comment12.text=\r\n\ Returns\ mob\ or\ block\ that\ the\ projectile\ will\ collide\ with\ vertically.\r\n
comment13.params=
comment13.target=boolean\ rotates()
comment13.text=\r\n\ Whether\ the\ projectile\ rotates\ with\ regard\ to\ its\ x/y\ velocities\r\n
comment14.params=
comment14.target=void\ refreshRotation()
comment15.params=x\ y\ direction\ speed
comment15.target=void\ fire(int,\ int,\ int,\ float)
comment16.params=
comment16.target=float\ getSpeed()
comment17.params=mob
comment17.target=void\ hitMob(Mob)
comment18.params=a
comment18.target=boolean\ specialCollide(greenfoot.Actor)
comment2.params=
comment2.target=int\ despawnDistance()
comment3.params=
comment3.target=void\ setHostile()
comment4.params=
comment4.target=void\ act()
comment5.params=
comment5.target=Vec2\ collisionPoint()
comment5.text=\r\n\ Returns\ the\ position\ of\ the\ collision\ detection\ point\ relative\ to\ center\ of\ image\r\n
comment6.params=
comment6.target=java.lang.String\ getImageName()
comment7.params=
comment7.target=Vec2\ getRotationAdjustedCollisionPoint()
comment7.text=\r\n\ Adjusts\ the\ projectile's\ collisionPoint()\ for\ rotation.\r\n
comment8.params=
comment8.target=double\ gravity()
comment8.text=\r\n\ Whether\ or\ not\ this\ projectile\ is\ affected\ by\ gravity.\r\n
comment9.params=
comment9.target=Projectile.CollisionReaction\ collisionReaction()
comment9.text=\r\n\ Returns\ behavior\ of\ projectile\ upon\ colliding\ with\ a\ block\r\n
numComments=19
